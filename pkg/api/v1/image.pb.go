// Code generated by protoc-gen-go. DO NOT EDIT.
// source: image.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Image
type Image struct {
	// Unique integer identifier of the todo task
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The image, either a URL, a binary or base64
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	// Detail description of the todo task
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Date and time to remind the todo task
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The format of the image
	Format               string   `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_9624c68e2b547544, []int{0}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Image) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Image) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Image) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Image) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

// Request data to create new image
type StoreRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Task entity to add
	Image                *Image   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreRequest) Reset()         { *m = StoreRequest{} }
func (m *StoreRequest) String() string { return proto.CompactTextString(m) }
func (*StoreRequest) ProtoMessage()    {}
func (*StoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9624c68e2b547544, []int{1}
}

func (m *StoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreRequest.Unmarshal(m, b)
}
func (m *StoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreRequest.Marshal(b, m, deterministic)
}
func (m *StoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreRequest.Merge(m, src)
}
func (m *StoreRequest) XXX_Size() int {
	return xxx_messageInfo_StoreRequest.Size(m)
}
func (m *StoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreRequest proto.InternalMessageInfo

func (m *StoreRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *StoreRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

// Response that contains data for created image
type StoreResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// ID of created image
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreResponse) Reset()         { *m = StoreResponse{} }
func (m *StoreResponse) String() string { return proto.CompactTextString(m) }
func (*StoreResponse) ProtoMessage()    {}
func (*StoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9624c68e2b547544, []int{2}
}

func (m *StoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreResponse.Unmarshal(m, b)
}
func (m *StoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreResponse.Marshal(b, m, deterministic)
}
func (m *StoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreResponse.Merge(m, src)
}
func (m *StoreResponse) XXX_Size() int {
	return xxx_messageInfo_StoreResponse.Size(m)
}
func (m *StoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreResponse proto.InternalMessageInfo

func (m *StoreResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *StoreResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Image)(nil), "v1.Image")
	proto.RegisterType((*StoreRequest)(nil), "v1.StoreRequest")
	proto.RegisterType((*StoreResponse)(nil), "v1.StoreResponse")
}

func init() { proto.RegisterFile("image.proto", fileDescriptor_9624c68e2b547544) }

var fileDescriptor_9624c68e2b547544 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x69, 0xba, 0x59, 0xe8, 0x74, 0x15, 0x1d, 0x44, 0x82, 0x17, 0x4b, 0x4f, 0x7b, 0xb1,
	0xd0, 0xf5, 0xec, 0xc1, 0xa3, 0xd7, 0xec, 0x13, 0xc4, 0x76, 0x94, 0x1c, 0xda, 0xc4, 0x24, 0xf6,
	0xe2, 0xcb, 0x4b, 0xa7, 0x15, 0x2a, 0x7a, 0x9b, 0xf9, 0x27, 0x7c, 0x7c, 0x7f, 0xa0, 0xb4, 0x83,
	0x79, 0xa7, 0xc6, 0x07, 0x97, 0x1c, 0x8a, 0xa9, 0xad, 0xbf, 0x40, 0xbe, 0xcc, 0x11, 0x5e, 0x82,
	0xb0, 0xbd, 0xca, 0xaa, 0xec, 0x98, 0x6b, 0x61, 0x7b, 0xbc, 0x01, 0xc9, 0x6f, 0x95, 0xa8, 0xb2,
	0x63, 0xa1, 0x97, 0x05, 0x2b, 0x28, 0x7b, 0x8a, 0x5d, 0xb0, 0x3e, 0x59, 0x37, 0xaa, 0x9c, 0x6f,
	0xdb, 0x08, 0x11, 0x76, 0xa3, 0x19, 0x48, 0xed, 0xf8, 0xc4, 0x33, 0xde, 0xc2, 0xfe, 0xcd, 0x85,
	0xc1, 0x24, 0x25, 0x39, 0x5d, 0xb7, 0xfa, 0x19, 0x0e, 0xe7, 0xe4, 0x02, 0x69, 0xfa, 0xf8, 0xa4,
	0x98, 0xf0, 0x0a, 0x72, 0xe3, 0x2d, 0x4b, 0x14, 0x7a, 0x1e, 0xf1, 0x7e, 0x6b, 0x51, 0x9e, 0x8a,
	0x66, 0x6a, 0x1b, 0xf6, 0x5d, 0x85, 0xea, 0x16, 0x2e, 0x56, 0x44, 0xf4, 0x6e, 0x8c, 0xf4, 0x0f,
	0x63, 0x69, 0x26, 0x7e, 0x9a, 0x9d, 0x9e, 0xe0, 0xc0, 0x88, 0x33, 0x85, 0xc9, 0x76, 0x84, 0x0f,
	0x20, 0x19, 0x81, 0xd7, 0x33, 0xfd, 0x17, 0xed, 0xee, 0x6f, 0xf4, 0xba, 0xe7, 0xcf, 0x7b, 0xfc,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0x17, 0xae, 0xbf, 0x8b, 0x4b, 0x01, 0x00, 0x00,
}
