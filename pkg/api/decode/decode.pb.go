// Code generated by protoc-gen-go. DO NOT EDIT.
// source: decode.proto

package decode

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Image
type Image struct {
	// The image url
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// The format of the image
	Format               string   `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_155635b60351d567, []int{0}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Image) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

// Request data to convert an image
type DecodeRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Image to convert
	Image                *Image   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecodeRequest) Reset()         { *m = DecodeRequest{} }
func (m *DecodeRequest) String() string { return proto.CompactTextString(m) }
func (*DecodeRequest) ProtoMessage()    {}
func (*DecodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_155635b60351d567, []int{1}
}

func (m *DecodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecodeRequest.Unmarshal(m, b)
}
func (m *DecodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecodeRequest.Marshal(b, m, deterministic)
}
func (m *DecodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeRequest.Merge(m, src)
}
func (m *DecodeRequest) XXX_Size() int {
	return xxx_messageInfo_DecodeRequest.Size(m)
}
func (m *DecodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeRequest proto.InternalMessageInfo

func (m *DecodeRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DecodeRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

// Response that contains data for converted image
type DecodeResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Converted image
	Image                *Image   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecodeResponse) Reset()         { *m = DecodeResponse{} }
func (m *DecodeResponse) String() string { return proto.CompactTextString(m) }
func (*DecodeResponse) ProtoMessage()    {}
func (*DecodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_155635b60351d567, []int{2}
}

func (m *DecodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecodeResponse.Unmarshal(m, b)
}
func (m *DecodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecodeResponse.Marshal(b, m, deterministic)
}
func (m *DecodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeResponse.Merge(m, src)
}
func (m *DecodeResponse) XXX_Size() int {
	return xxx_messageInfo_DecodeResponse.Size(m)
}
func (m *DecodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeResponse proto.InternalMessageInfo

func (m *DecodeResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DecodeResponse) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func init() {
	proto.RegisterType((*Image)(nil), "decode.Image")
	proto.RegisterType((*DecodeRequest)(nil), "decode.DecodeRequest")
	proto.RegisterType((*DecodeResponse)(nil), "decode.DecodeResponse")
}

func init() { proto.RegisterFile("decode.proto", fileDescriptor_155635b60351d567) }

var fileDescriptor_155635b60351d567 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x49, 0x4d, 0xce,
	0x4f, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x0c, 0xb9, 0x58,
	0x3d, 0x73, 0x13, 0xd3, 0x53, 0x85, 0x04, 0xb8, 0x98, 0x4b, 0x8b, 0x72, 0x24, 0x18, 0x15, 0x18,
	0x35, 0x38, 0x83, 0x40, 0x4c, 0x21, 0x31, 0x2e, 0xb6, 0xb4, 0xfc, 0xa2, 0xdc, 0xc4, 0x12, 0x09,
	0x26, 0xb0, 0x20, 0x94, 0xa7, 0xe4, 0xc6, 0xc5, 0xeb, 0x02, 0xd6, 0x1c, 0x94, 0x5a, 0x58, 0x9a,
	0x5a, 0x5c, 0x02, 0xd2, 0x9a, 0x58, 0x90, 0x09, 0xd3, 0x9a, 0x58, 0x90, 0x29, 0xa4, 0xcc, 0xc5,
	0x9a, 0x09, 0x32, 0x15, 0xac, 0x93, 0xdb, 0x88, 0x57, 0x0f, 0x6a, 0x37, 0xd8, 0xaa, 0x20, 0x88,
	0x9c, 0x92, 0x3b, 0x17, 0x1f, 0xcc, 0x9c, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x32, 0x0d, 0x32,
	0xf2, 0x80, 0x39, 0x28, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x9c, 0x8b, 0x0d, 0x22,
	0x20, 0x24, 0x0a, 0xd3, 0x80, 0xe2, 0x62, 0x29, 0x31, 0x74, 0x61, 0x88, 0x03, 0x92, 0xd8, 0xc0,
	0x81, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe8, 0xc8, 0xa9, 0xb0, 0x2c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DecodeServiceClient is the client API for DecodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DecodeServiceClient interface {
	// Create new image in the storage
	Decode(ctx context.Context, in *DecodeRequest, opts ...grpc.CallOption) (*DecodeResponse, error)
}

type decodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewDecodeServiceClient(cc *grpc.ClientConn) DecodeServiceClient {
	return &decodeServiceClient{cc}
}

func (c *decodeServiceClient) Decode(ctx context.Context, in *DecodeRequest, opts ...grpc.CallOption) (*DecodeResponse, error) {
	out := new(DecodeResponse)
	err := c.cc.Invoke(ctx, "/decode.DecodeService/Decode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DecodeServiceServer is the server API for DecodeService service.
type DecodeServiceServer interface {
	// Create new image in the storage
	Decode(context.Context, *DecodeRequest) (*DecodeResponse, error)
}

// UnimplementedDecodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDecodeServiceServer struct {
}

func (*UnimplementedDecodeServiceServer) Decode(ctx context.Context, req *DecodeRequest) (*DecodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Decode not implemented")
}

func RegisterDecodeServiceServer(s *grpc.Server, srv DecodeServiceServer) {
	s.RegisterService(&_DecodeService_serviceDesc, srv)
}

func _DecodeService_Decode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DecodeServiceServer).Decode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/decode.DecodeService/Decode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DecodeServiceServer).Decode(ctx, req.(*DecodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DecodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "decode.DecodeService",
	HandlerType: (*DecodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Decode",
			Handler:    _DecodeService_Decode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "decode.proto",
}
