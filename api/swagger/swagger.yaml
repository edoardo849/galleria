openapi: "3.0.0"
info:
  version: 1.0.0
  title: Progimage
  description: >
    <p>
    ProgImage is designed as a specialised image storage and processing engine
    to be used by other applications, and will (only) provide highperformance 
    access via its API.
    </p>
    <p>
    ProgImage provides a number of image processing and transformation capabilities 
    such as compression, rotation, a variety of filters, thumbnail creation, and masking.
    </p>
    <p>
    These capabilities are all delivered as a set of highperformance web-services that can 
    operate on images provided as data in a request, operate on a remote image via a URL, 
    or on images that are already in the repository.
    </p>
  license:
    name: MIT
servers:
  - url: http://35.197.243.170:8081/v1
paths:
  /image:
    post:
      summary: Uploads an image
      operationId: imageCreate
      tags:
        - image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: The location of the created image
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Id"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /image/{imageId}:
    get:
      summary: Get an image
      operationId: imageGet
      tags:
        - image
      parameters:
        - name: imageId
          in: path
          required: true
          description: The id of the image to retrieve
          schema:
            type: string
      responses:
        '200':
          description: An image
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/tiff:
              schema:
                type: string
                format: binary
            image/gif:
              schema:
                type: string
                format: binary
            image/bmp:
              schema:
                type: string
                format: binary
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /image/{imageId}.{format}:
    get:
      summary: Convert an image
      operationId: imageConvertFromCache
      tags:
        - image
      parameters:
        - name: imageId
          in: path
          required: true
          description: The id of the image stored in the cache
          schema:
            type: string
        - name: format
          in: path
          required: true
          description: The conversion format
          schema:
            type: string
            enum: [png, jpg, jpeg, tiff, gif, bmp]
      responses:
        '200':
          description: The converted image
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/tiff:
              schema:
                type: string
                format: binary
            image/gif:
              schema:
                type: string
                format: binary
            image/bmp:
              schema:
                type: string
                format: binary
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /image/convert:
    post:
      summary: Convert an image from a format to another
      operationId: imageConvert
      tags:
        - image
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Convert"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ConvertForm"
      responses:
        '200':
          description: An image
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/tiff:
              schema:
                type: string
                format: binary
            image/gif:
              schema:
                type: string
                format: binary
            image/bmp:
              schema:
                type: string
                format: binary
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /image/thumbnail:
    post:
      summary: Convert an image from a format to another by specifying an Url
      operationId: thumbnail
      tags:
        - image
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Thumbnail"
      responses:
        '200':
          description: An image
          content:            
            image/jpg:
              schema:
                type: string
                format: binary
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Id:
      required:
        - id
      properties:
        id:
          type: string
          description: The Id of the image stored in Progimage
    Convert:
      required:
        - url
        - filename
        - to
      properties:
        url:
          type: string
          description: The URL where the image is located
        filename:
          type: string
          description: The name of the image
        to:
          type: string
          enum: [png, jpg, jpeg, tiff, gif, bmp]
          description: The target format
        from:
          type: string
          description: The original format of the image
    ConvertForm:
      required:
        - image
        - filename
        - to
      properties:
        image:
          type: string
          format: binary
          description: The image
        filename:
          type: string
          description: The name of the image
        to:
          type: string
          enum: [png, jpg, jpeg, tiff, gif, bmp]
          description: The target format
        from:
          type: string
          description: The original format of the image
    Thumbnail:
      required:
        - image
        - width
        - height
      properties:
        image:
          type: string
          format: binary
          description: The image to transform into a thumbnail
        width:
          type: integer
          description: The desired width of the thumbnail
        height:
          type: integer
          description: The desired height of the thumbnail
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string